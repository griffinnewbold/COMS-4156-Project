# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "main", "cobertura-ci-loop" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -B package --file pom.xml
    - name: Run JUnit tests with Maven
      run: mvn test
    - name: ReportGenerator
      uses: danielpalme/ReportGenerator-GitHub-Action@5.2.0
      with:
        # The coverage reports that should be parsed (separated by semicolon). Globbing is supported.
        reports: target/site/jacoco/jacoco.xml
        reporttypes: HtmlInline;Cobertura;TextSummary
        sourcedirs: src/main/java/com/dev/sweproject
        title: JaCoCo code coverage report
    - name: JaCoCoSummary
      run: cat coveragereport/Summary.txt
    - name: Publish SpotBugs report
      uses: lcollins/spotbugs-github-action@v2.0.0
      with:
        # A file, directory or wildcard pattern that describes where to find the reports
        path: src/main/java/com/dev/sweproject
        # Check run name under which the report is created
        # name: # optional, default is SpotBugs
        # Check run title under which the report is created
        # title: # optional, default is SpotBugs Source Code Analyzer report
        # Personal access token (PAT) used to fetch the repository. The PAT is configured with the local git config, which enables your scripts to run authenticated git commands. The post-job step removes the PAT. We recommend using a service account with the least permissions necessary. Also when generating a new PAT, select the least scopes necessary. [Learn more about creating and using encrypted secrets](https://help.github.com/en/actions/automating-your-workflow-with-github-actions/creating-and-using-encrypted-secrets)
        # token: # optional, default is ${{ github.token }}
          
    
    
    # - name: RunStaticAnalysis
    #   uses: sscpac/statick-action@v0.9.2
    #   with:
    #     # Fail on any Statick warning
    #     check: false
    #     # Configuration
    #     # config: # optional, default is config.yaml
    #     # Scan level to use.  Overrides levels specified by the profile.
    #     # level: # optional
    #     # Log verbosity level
    #     # log_level: # optional, default is INFO
    #     # Path to store output logs
    #     # output_path: # optional, default is /tmp/statick_output
    #     # Path to search for files
    #     package_path: src/main/java/com/dev/sweproject # optional, default is .
    #     # Profile configuration
    #     # profile: # optional, default is profile.yaml
    #     # Paths (comma delimited) for user-defined configuration
    #     # user_paths: # optional
          
